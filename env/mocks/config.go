// Code generated by MockGen. DO NOT EDIT.
// Source: ./config.go
//
// Generated by this command:
//
//	mockgen -source=./config.go -destination=./mocks/config.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIConfig is a mock of IConfig interface.
type MockIConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigMockRecorder
}

// MockIConfigMockRecorder is the mock recorder for MockIConfig.
type MockIConfigMockRecorder struct {
	mock *MockIConfig
}

// NewMockIConfig creates a new mock instance.
func NewMockIConfig(ctrl *gomock.Controller) *MockIConfig {
	mock := &MockIConfig{ctrl: ctrl}
	mock.recorder = &MockIConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfig) EXPECT() *MockIConfigMockRecorder {
	return m.recorder
}

// GetEnv mocks base method.
func (m *MockIConfig) GetEnv() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnv")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEnv indicates an expected call of GetEnv.
func (mr *MockIConfigMockRecorder) GetEnv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnv", reflect.TypeOf((*MockIConfig)(nil).GetEnv))
}
